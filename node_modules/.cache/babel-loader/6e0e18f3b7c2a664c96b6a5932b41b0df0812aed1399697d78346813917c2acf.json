{"ast":null,"code":"import _objectSpread from \"C:/Users/Nozomi/.vscode/kineblitz/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _regeneratorRuntime from \"C:/Users/Nozomi/.vscode/kineblitz/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/Nozomi/.vscode/kineblitz/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\r\n * Open a database.\r\n *\r\n * @param name Name of the database.\r\n * @param version Schema version.\r\n * @param callbacks Additional callbacks.\r\n */\nfunction openDB(name, version) {\n  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n    blocked = _ref.blocked,\n    upgrade = _ref.upgrade,\n    blocking = _ref.blocking,\n    terminated = _ref.terminated;\n  var request = indexedDB.open(name, version);\n  var openPromise = wrap(request);\n  if (upgrade) {\n    request.addEventListener('upgradeneeded', function (event) {\n      upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction));\n    });\n  }\n  if (blocked) request.addEventListener('blocked', function () {\n    return blocked();\n  });\n  openPromise.then(function (db) {\n    if (terminated) db.addEventListener('close', function () {\n      return terminated();\n    });\n    if (blocking) db.addEventListener('versionchange', function () {\n      return blocking();\n    });\n  }).catch(function () {});\n  return openPromise;\n}\n/**\r\n * Delete a database.\r\n *\r\n * @param name Name of the database.\r\n */\nfunction deleteDB(name) {\n  var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n    blocked = _ref2.blocked;\n  var request = indexedDB.deleteDatabase(name);\n  if (blocked) request.addEventListener('blocked', function () {\n    return blocked();\n  });\n  return wrap(request).then(function () {\n    return undefined;\n  });\n}\nvar readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nvar writeMethods = ['put', 'add', 'delete', 'clear'];\nvar cachedMethods = new Map();\nfunction getMethod(target, prop) {\n  if (!(target instanceof IDBDatabase && !(prop in target) && typeof prop === 'string')) {\n    return;\n  }\n  if (cachedMethods.get(prop)) return cachedMethods.get(prop);\n  var targetFuncName = prop.replace(/FromIndex$/, '');\n  var useIndex = prop !== targetFuncName;\n  var isWrite = writeMethods.includes(targetFuncName);\n  if (\n  // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n  !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) || !(isWrite || readMethods.includes(targetFuncName))) {\n    return;\n  }\n  var method = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(storeName) {\n      var _target;\n      var tx,\n        target,\n        _len,\n        args,\n        _key,\n        _args = arguments;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n            tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n            target = tx.store;\n            for (_len = _args.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n              args[_key - 1] = _args[_key];\n            }\n            if (useIndex) target = target.index(args.shift());\n            // Must reject if op rejects.\n            // If it's a write operation, must reject if tx.done rejects.\n            // Must reject with op rejection first.\n            // Must resolve with op value.\n            // Must handle both promises (no unhandled rejections)\n            _context.next = 6;\n            return Promise.all([(_target = target)[targetFuncName].apply(_target, args), isWrite && tx.done]);\n          case 6:\n            return _context.abrupt(\"return\", _context.sent[0]);\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, this);\n    }));\n    return function method(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  cachedMethods.set(prop, method);\n  return method;\n}\nreplaceTraps(function (oldTraps) {\n  return _objectSpread(_objectSpread({}, oldTraps), {}, {\n    get: function get(target, prop, receiver) {\n      return getMethod(target, prop) || oldTraps.get(target, prop, receiver);\n    },\n    has: function has(target, prop) {\n      return !!getMethod(target, prop) || oldTraps.has(target, prop);\n    }\n  });\n});\nexport { deleteDB, openDB };","map":{"version":3,"names":["w","wrap","r","replaceTraps","u","unwrap","openDB","name","version","_ref","arguments","length","undefined","blocked","upgrade","blocking","terminated","request","indexedDB","open","openPromise","addEventListener","event","result","oldVersion","newVersion","transaction","then","db","catch","deleteDB","_ref2","deleteDatabase","readMethods","writeMethods","cachedMethods","Map","getMethod","target","prop","IDBDatabase","get","targetFuncName","replace","useIndex","isWrite","includes","IDBIndex","IDBObjectStore","prototype","method","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","storeName","_target","tx","_len","args","_key","_args","_callee$","_context","prev","next","store","Array","index","shift","Promise","all","apply","done","abrupt","sent","stop","_x","set","oldTraps","_objectSpread","receiver","has"],"sources":["C:/Users/Nozomi/.vscode/kineblitz/node_modules/@firebase/installations/node_modules/idb/build/index.js"],"sourcesContent":["import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\r\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\r\n\r\n/**\r\n * Open a database.\r\n *\r\n * @param name Name of the database.\r\n * @param version Schema version.\r\n * @param callbacks Additional callbacks.\r\n */\r\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\r\n    const request = indexedDB.open(name, version);\r\n    const openPromise = wrap(request);\r\n    if (upgrade) {\r\n        request.addEventListener('upgradeneeded', (event) => {\r\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction));\r\n        });\r\n    }\r\n    if (blocked)\r\n        request.addEventListener('blocked', () => blocked());\r\n    openPromise\r\n        .then((db) => {\r\n        if (terminated)\r\n            db.addEventListener('close', () => terminated());\r\n        if (blocking)\r\n            db.addEventListener('versionchange', () => blocking());\r\n    })\r\n        .catch(() => { });\r\n    return openPromise;\r\n}\r\n/**\r\n * Delete a database.\r\n *\r\n * @param name Name of the database.\r\n */\r\nfunction deleteDB(name, { blocked } = {}) {\r\n    const request = indexedDB.deleteDatabase(name);\r\n    if (blocked)\r\n        request.addEventListener('blocked', () => blocked());\r\n    return wrap(request).then(() => undefined);\r\n}\r\n\r\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\r\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\r\nconst cachedMethods = new Map();\r\nfunction getMethod(target, prop) {\r\n    if (!(target instanceof IDBDatabase &&\r\n        !(prop in target) &&\r\n        typeof prop === 'string')) {\r\n        return;\r\n    }\r\n    if (cachedMethods.get(prop))\r\n        return cachedMethods.get(prop);\r\n    const targetFuncName = prop.replace(/FromIndex$/, '');\r\n    const useIndex = prop !== targetFuncName;\r\n    const isWrite = writeMethods.includes(targetFuncName);\r\n    if (\r\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\r\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\r\n        !(isWrite || readMethods.includes(targetFuncName))) {\r\n        return;\r\n    }\r\n    const method = async function (storeName, ...args) {\r\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\r\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\r\n        let target = tx.store;\r\n        if (useIndex)\r\n            target = target.index(args.shift());\r\n        // Must reject if op rejects.\r\n        // If it's a write operation, must reject if tx.done rejects.\r\n        // Must reject with op rejection first.\r\n        // Must resolve with op value.\r\n        // Must handle both promises (no unhandled rejections)\r\n        return (await Promise.all([\r\n            target[targetFuncName](...args),\r\n            isWrite && tx.done,\r\n        ]))[0];\r\n    };\r\n    cachedMethods.set(prop, method);\r\n    return method;\r\n}\r\nreplaceTraps((oldTraps) => ({\r\n    ...oldTraps,\r\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\r\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\r\n}));\r\n\r\nexport { deleteDB, openDB };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}